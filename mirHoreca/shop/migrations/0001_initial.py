# Generated by Django 4.2.5 on 2023-09-24 06:58

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import shop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'get_latest_by': ['created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Adress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(default='Россия', max_length=70, verbose_name='Страна')),
                ('region', models.CharField(blank=True, default='', max_length=70, verbose_name='Регион')),
                ('city', models.CharField(max_length=70, verbose_name='Город')),
                ('street', models.CharField(max_length=70, verbose_name='Улица')),
                ('house', models.CharField(max_length=70, verbose_name='Дом')),
                ('flat', models.CharField(max_length=70, verbose_name='Квартира')),
                ('zip_code', models.CharField(blank=True, default='', max_length=70, verbose_name='Индекс')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='BaseProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, unique=True, verbose_name='Название товара')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('slug', models.SlugField(max_length=60, unique=True, validators=[shop.models.validate_slug_without_underlines], verbose_name='URL-идентификатор')),
                ('wall_thickness', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Толщина стенок (см)')),
                ('is_for_microvawe', models.BooleanField(blank=True, null=True, verbose_name='Подходит для микроволновки?')),
                ('is_for_gas_stoves', models.BooleanField(blank=True, null=True, verbose_name='Подходит для газовой плиты?')),
                ('is_for_electric_stoves', models.BooleanField(blank=True, null=True, verbose_name='Подходит для электроплиты?')),
                ('is_for_glass_ceramic_stoves', models.BooleanField(blank=True, null=True, verbose_name='Подходит для стеклокерамической плиты?')),
                ('is_for_induction_stoves', models.BooleanField(blank=True, null=True, verbose_name='Подходит для индукционной плиты?')),
                ('is_for_oven', models.BooleanField(blank=True, null=True, verbose_name='Подходит для духовки?')),
                ('is_for_halogen_burners', models.BooleanField(blank=True, null=True, verbose_name='Подходит для галогеновой конфорки?')),
                ('is_for_open_fire', models.BooleanField(blank=True, null=True, verbose_name='Подходит для открытого огня?')),
                ('is_for_dishwasher', models.BooleanField(blank=True, null=True, verbose_name='Подходит для посудомойки?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Базовый товар',
                'verbose_name_plural': 'Базовые товары',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='URL-идентификатор')),
                ('image', models.ImageField(upload_to=shop.models.collectionImg_directory_path, verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Коллекция',
                'verbose_name_plural': 'Коллекции',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=40, unique=True, validators=[shop.models.validate_slug_without_underlines], verbose_name='URL-идентификатор')),
                ('css_color', models.TextField(max_length=240, verbose_name='css-цвет')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ColorsOfBaseProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('base_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.baseproduct', verbose_name='Базовый товар')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.color', verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Цвет базового товара',
                'verbose_name_plural': 'Цвета базовых товаров',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Страна-производитель',
                'verbose_name_plural': 'Страны-производители',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='GeometryForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Форма',
                'verbose_name_plural': 'Формы',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='NonstickType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Тип антипригарного покрытия',
                'verbose_name_plural': 'Типы антипригарных покрытий',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('0', 'In cart'), ('1', 'New'), ('2', 'Processing'), ('3', 'Paid'), ('4', 'Ready to shipping'), ('5', 'Shipped')], default='1', max_length=2)),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.adress', verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featureName', models.CharField(max_length=70, verbose_name='Название варианта товара')),
                ('slug', models.SlugField(max_length=70, verbose_name='URL-идентификатор варианта товара')),
                ('articul', models.CharField(max_length=30, unique=True, verbose_name='Артикул')),
                ('residue', models.PositiveSmallIntegerField(default=1, verbose_name='Остаток')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена (руб)')),
                ('diameter', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Диаметр (см)')),
                ('depth', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Глубина (см)')),
                ('height', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Высота (см)')),
                ('width', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Ширина (см)')),
                ('length', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Длина (см)')),
                ('value', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Объем (л)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('color_of_base_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.colorsofbaseproduct', verbose_name='Основной цвет')),
                ('extra_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.color', verbose_name='Дополнительный цвет')),
            ],
            options={
                'verbose_name': 'Вариант товара',
                'verbose_name_plural': 'Варианты товара',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(default=0, verbose_name='Оценка')),
                ('text', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.productvariant', verbose_name='Товар')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.productvariant', verbose_name='Товар')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранное',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariantImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt', models.CharField(blank=True, default='', max_length=150, verbose_name='alt-текст для SEO')),
                ('image', models.ImageField(upload_to=shop.models.baseProductImg_directory_path, verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.productvariant', verbose_name='Вариант товара')),
            ],
            options={
                'verbose_name': 'Изображение варианта товара',
                'verbose_name_plural': 'Изображения вариантов товаров',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductsInOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(default=1, verbose_name='Количество')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order', verbose_name='Заказ')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.productvariant', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Товар в заказе',
                'verbose_name_plural': 'Товары в заказе',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(through='shop.ProductsInOrder', to='shop.productvariant', verbose_name='Товары в заказе'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='URL-идентификатор')),
                ('image', models.ImageField(upload_to=shop.models.categoryImg_directory_path, verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='BaseProductImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt', models.CharField(blank=True, default='', max_length=150, verbose_name='alt-текст для SEO')),
                ('image', models.ImageField(upload_to=shop.models.baseProductImg_directory_path, verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('base_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.baseproduct', verbose_name='Базовый товар')),
            ],
            options={
                'verbose_name': 'Изображение базового товара',
                'verbose_name_plural': 'Изображения базовых товаров',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='collection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.collection', verbose_name='Коллекция'),
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='colors',
            field=models.ManyToManyField(through='shop.ColorsOfBaseProduct', to='shop.color', verbose_name='Цвета базового товара'),
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.country', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='geometry_form',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.geometryform', verbose_name='Форма'),
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='material',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.material', verbose_name='Материал'),
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='nonstick_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.nonsticktype', verbose_name='Тип антипригарного покрытия'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='favorite_products',
            field=models.ManyToManyField(related_name='voters', through='shop.UserFavorite', to='shop.productvariant', verbose_name='Избранное'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='reviews',
            field=models.ManyToManyField(related_name='raters', through='shop.UserReview', to='shop.productvariant', verbose_name='Отзывы на товары'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
